version: "3.8"

services:
  traefik:
    image: traefik:${TRAEFIK_TAG}
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/../config/traefik:/etc/traefik
    environment:
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
    labels:
      - "traefik.enable=true"

  portainer:
    image: portainer/portainer-ce:${PORTAINER_TAG}
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_PATH}/config/portainer:/data
    ports:
      - "9000:9000"

  tailscale:
    image: tailscale/tailscale:${TAILSCALE_TAG}
    container_name: tailscale
    network_mode: "host"
    privileged: true
    environment:
      - TS_AUTH_KEY=${TS_AUTH_KEY}
      - TS_ROUTES=${TS_ROUTES}
      - TS_HOSTNAME=${TAILSCALE_HOSTNAME}
    volumes:
      - /var/lib:/var/lib
      - /dev/net/tun:/dev/net/tun

  sonarr:
    image: ghcr.io/linuxserver/sonarr:${SONARR_TAG}
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH}/config/sonarr:/config
      - ${DATA_PATH}/library:/library
    ports:
      - 8989:8989
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:8989
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_HOST}`)"
      - "traefik.http.routers.sonarr.entrypoints=web-secure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - pi0_network

  radarr:
    image: ghcr.io/linuxserver/radarr:${RADARR_TAG}
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH}/config/radarr:/config
      - ${DATA_PATH}/library:/library
    ports:
      - 7878:7878
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:7878
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_HOST}`)"
      - "traefik.http.routers.radarr.entrypoints=web-secure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - pi0_network

  jackett:
    image: ghcr.io/linuxserver/jackett:${JACKETT_TAG}
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - AUTO_UPDATE=true
    volumes:
      - ${DATA_PATH}/config/jackett:/config
      - ${DATA_PATH}/library/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:9117
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`${JACKETT_HOST}`)"
      - "traefik.http.routers.jackett.entrypoints=web-secure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    networks:
      - pi0_network

  transmission:
    image: ghcr.io/linuxserver/transmission:${TRANSMISSION_TAG}
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH}/config/transmission:/config
      - ${DATA_PATH}/library/downloads:/library/downloads
      - ${DATA_PATH}/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:9091/transmission/web/
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_HOST}`)"
      - "traefik.http.routers.transmission.entrypoints=web-secure"
      - "traefik.http.routers.transmission.tls.certresolver=myresolver"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
    networks:
      - pi0_network

  bazarr:
    image: lscr.io/linuxserver/bazarr:${BAZARR_TAG}
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH}/config/bazarr:/config
      - ${DATA_PATH}/library:/library/
    ports:
      - 6767:6767
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${BAZARR_HOST}`)"
      - "traefik.http.routers.bazarr.entrypoints=web-secure"
      - "traefik.http.routers.bazarr.tls.certresolver=myresolver"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    networks:
      - pi0_network

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:${JELLYFIN_TAG}
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHED_SERVER_URL}
    volumes:
      - ${DATA_PATH}/config/jellyfin:/config
      - ${DATA_PATH}/library/tv:/data/tvshows
      - ${DATA_PATH}/library/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.jellyfin.rule=Host(`${JELLYFIN_HOST}`)"
      - "traefik.http.routers.jellyfin.entrypoints=web-secure"
      - "traefik.http.routers.jellyfin.tls.certresolver=myresolver"
      - "traefik.http.routers.jellyfin.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

      - "traefik.http.routers.jellyfin-pub.rule=Host(`${JELLYFIN_PUB_HOST}`)"
      - "traefik.http.routers.jellyfin-pub.entrypoints=web-secure"
      - "traefik.http.routers.jellyfin-pub.tls.certresolver=myresolver"
      - "traefik.http.routers.jellyfin-pub.service=jellyfin-public"
      - "traefik.http.services.jellyfin-public.loadbalancer.server.port=8096"
    networks:
      - pi0_network

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_TAG}
    container_name: jellyseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${DATA_PATH}/config/jellyseerr:/app/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`${JELLYSEERR_HOST}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=web-secure"
      - "traefik.http.routers.jellyseerr.tls.certresolver=myresolver"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    networks:
      - pi0_network