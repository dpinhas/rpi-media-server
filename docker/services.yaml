---
services:
  traefik:
    image: traefik:${TRAEFIK_TAG}
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_PATH}/config/letsencrypt:/letsencrypt
      - ${PWD}/../config/traefik/dynamic.yaml:/etc/traefik/dynamic.yaml
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--log.level=${TRAEFIK_LOG_LEVEL}"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--entryPoints.metrics.address=:8083"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http.tls.certResolver=myresolver"
      - "--entrypoints.web-secure.http.tls.domains[0].main=duckdns.org"
      - "--entrypoints.web-secure.http.tls.domains[0].sans=*.duckdns.org"
      # Lets-encrypt
      - "--certificatesresolvers.myresolver.acme.dnschallenge.delaybeforecheck=0"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    environment:
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-ui.rule=Host(`${TRAEFIK_UI_HOST}`)"
      - "traefik.http.routers.traefik-ui.entrypoints=web-secure"
      - "traefik.http.routers.traefik-ui.tls.certresolver=myresolver"
      - "traefik.http.services.traefik-ui.loadbalancer.server.port=8080"
    networks:
      - pi0_network

  adguardhome:
    image: adguard/adguardhome:${ADGUARD_TAG}
    container_name: adguardhome
    volumes:
      - ${DATA_PATH}/config/adguard_home/workdir:/opt/adguardhome/work
      - ${DATA_PATH}/config/adguard_home/confdir:/opt/adguardhome/conf
    ports:
      - 3000:3000/tcp
      - 53:53/tcp
      - 53:53/udp
      - 8082:8082/tcp
      - 8443:443/tcp
      - 443:443/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.rule=Host(`${ADGUARD_HOST}`)"
      - "traefik.http.routers.adguard.entrypoints=web-secure"
      - "traefik.http.routers.adguard.tls.certresolver=myresolver"
      - "traefik.http.services.adguard.loadbalancer.server.port=8082"
    networks:
      - pi0_network

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:${FLARESOLVERR_TAG}
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${FLARESOLVERR_LOG_LEVEL}
    ports:
      - 8191:8191
    restart: unless-stopped

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:${PORTAINER_TAG}
    ports:
      - 8000:8000
      - 9443:9443
      - 9000:9000
    volumes:
      - ${DATA_PATH}/config/portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - pi0_network
